"use strict";(self.webpackChunkoffloop_doc=self.webpackChunkoffloop_doc||[]).push([[1966],{2454:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Core-Modules-and-Features/NetworkMonitoring","title":"Network Monitoring","description":"The network monitoring module is responsible for detecting the online/offline status of the application and managing data synchronization accordingly. This module supports both web and React Native environments, enabling offline data access and processing without requiring manual management.","source":"@site/docs/Core-Modules-and-Features/NetworkMonitoring.md","sourceDirName":"Core-Modules-and-Features","slug":"/network-monitoring","permalink":"/offloop/docs/network-monitoring","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"NetworkMonitoring","title":"Network Monitoring","sidebar_label":"Network Monitoring","slug":"/network-monitoring","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Storage","permalink":"/offloop/docs/storage"},"next":{"title":"Queue Manager","permalink":"/offloop/docs/queue-manager"}}');var i=t(4848),s=t(8453);const r={id:"NetworkMonitoring",title:"Network Monitoring",sidebar_label:"Network Monitoring",slug:"/network-monitoring",sidebar_position:4},a=void 0,l={},c=[{value:"How It Works",id:"how-it-works",level:3}];function d(e){const n={code:"code",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The network monitoring module is responsible for detecting the online/offline status of the application and managing data synchronization accordingly. This module supports both web and React Native environments, enabling offline data access and processing without requiring manual management."}),"\n",(0,i.jsx)(n.h3,{id:"how-it-works",children:"How It Works"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Environment Detection"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The module first detects the environment (web or React Native) using the ",(0,i.jsx)(n.code,{children:"navigator"})," object."]}),"\n",(0,i.jsxs)(n.li,{children:["For web environments, it uses the ",(0,i.jsx)(n.code,{children:"navigator.onLine"})," property and ",(0,i.jsx)(n.code,{children:"window"})," events."]}),"\n",(0,i.jsxs)(n.li,{children:["For React Native environments, it dynamically imports the ",(0,i.jsx)(n.code,{children:"@react-native-community/netinfo"})," library."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Online/Offline Detection"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Web"}),": Listens to ",(0,i.jsx)(n.code,{children:"online"})," and ",(0,i.jsx)(n.code,{children:"offline"})," events on the ",(0,i.jsx)(n.code,{children:"window"})," object to update the online status."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React Native"}),": Uses the ",(0,i.jsx)(n.code,{children:"NetInfo"})," library to fetch the network status and listen for changes."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status Change Handling"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"When the network status changes, the module updates its internal state and notifies registered callbacks."}),"\n",(0,i.jsxs)(n.li,{children:["It also emits events (",(0,i.jsx)(n.code,{children:"ONLINE"}),", ",(0,i.jsx)(n.code,{children:"OFFLINE"}),", ",(0,i.jsx)(n.code,{children:"DATA_SYNC"}),") using an ",(0,i.jsx)(n.code,{children:"EventManager"})," to trigger appropriate actions."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Data Synchronization"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"When the application goes online, it triggers a data synchronization process."}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"OfflineManager"})," processes the sync queue and attempts to sync critical data with the server."]}),"\n",(0,i.jsx)(n.li,{children:"If the application is offline, data operations are queued for later processing."}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(6540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);